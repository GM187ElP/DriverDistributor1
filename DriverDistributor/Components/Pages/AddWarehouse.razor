@page "/add-warehouse"
@using DriverDistributor.Entities
@using DriverDistributor.Services
@using Microsoft.AspNetCore.Authorization
@using MudBlazor
@attribute [Authorize(Roles = "Admin,LogisticManager")]

<PageTitle>اضافه کردن انبار</PageTitle>

<MudContainer MaxWidth="MaxWidth.Small" Class="page-center">
    <MudPaper Class="pa-6 form-card" Elevation="4">
        <div style="display:flex; justify-content:center; align-items:center; margin-bottom:16px;">
            <h2 class="mud-typography-h5 mb-0">اضافه کردن انبار</h2>
        </div>

        <MudForm @ref="form" Model="@model" @bind-IsValid="@success" @bind-Errors="@errors">
            <MudTextField Class="mb-3" @bind-Value="model.Name" Immediate="true"
                          Required="true" RequiredError="انبار را وارد کنید"
                          Placeholder="نام انبار" Validation="@(new Func<string,string>(Exists))" />

            <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true"
                       OnClick="@(async ()=>await Add(form))">
                ثبت
            </MudButton>
        </MudForm>
    </MudPaper>
</MudContainer>

<style>
    /* Center the container */
    .page-center {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0 auto;
    }

    /* Card styling */
    .form-card {
        width: 100%;
        max-width: 420px;
        padding: 30px;
        border-radius: 16px;
        box-shadow: 0 8px 24px rgba(0,0,0,0.15);
    }

    /* Reduce MudBlazor default spacing */
    .mud-form .mud-text-field {
        margin-bottom: 12px !important;
    }

    /* Override MudPaper default margin */
    .mud-paper {
        margin: 0 !important;
    }
</style>

@code {
    [Inject] public DataServices services { get; set; }

    bool success;
    string[] errors = { };
    private MudForm form;
    List<Warehouse> data = [];

    private Warehouse model = new();

    private string Exists(string name)
    {
        if (string.IsNullOrWhiteSpace(name))
            return "انبار را وارد کنید";

        data = services.Load(TableName.Warehouse) as List<Warehouse> ?? [];
        if (data.Any(x => x.Name == name))
            return "انبار وارد شده موجود است.";

        return null;
    }

    private async Task Add(MudForm form)
    {
        await form.Validate();

        if (success)
        {
            var warehouse = new Warehouse
                {
                    Name = model.Name,
                };

            services.Add(warehouse);

            model = new(); // reset form model
            await Task.Delay(1); // allow UI binding

            StateHasChanged();
            await form.ResetAsync(); // reset form fields & validation
        }
    }
}
